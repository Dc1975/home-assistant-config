- id: '1685479368270'
  alias: GR Gartenbewässerung Überwachung Timer stop
  variables:
    alexa_device: media_player.echo_wohnzimmer,media_player.echo_dachgeschoss
    alexa_type: announce   
  description: ''
  trigger:
#    - platform: state
#      entity_id:
#      - timer.ti_bz_motion_lights
#      to: idle
# see Bug https://github.com/home-assistant/home-assistant.io/pull/26352
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.ti_gr_lawn_sprinkler_observer
  condition: []
  action:
    - if:
      - condition: template
        value_template: "{{ states('switch.brunnen') == 'unavailable' }}"
      then:
        - service: script.turn_on
          target:
            entity_id: script.ha_handy_notification
          data:
            variables:
              msg_title: "{{states('input_text.it_general_notification_title')}} Garten"
              msg_message: "Die Rasenbewässerung kann nicht abgeschaltet werden. Der Schalter {{ state_attr('switch.brunnen', 'friendly_name') }} ist nicht verfügbar."
        #- service: notify.alexa_media_uberall
        #   data:
        #     title: "{{states('input_text.it_general_notification_title')}} Garten"
        #     message: "Die Rasenbewässerung kann nicht abgeschaltet werden. Der Schalter {{ state_attr('switch.brunnen', 'friendly_name') }} ist nicht verfügbar."
        #     data:
        #       type: announce
        #       method: all 
        - service: script.turn_on
          target:
            entity_id: script.ha_alexa_notification_queued
          data:
            variables:
              msg_title: "{{states('input_text.it_general_notification_title')}} Garten"
              msg_message: "Die Rasenbewässerung kann nicht abgeschaltet werden. Der Schalter {{ state_attr('switch.brunnen', 'friendly_name') }} ist nicht verfügbar."
              device: "{{ alexa_device }}"
              type: "{{ alexa_type }}"                        
        - service: script.turn_on
          data: {}
          target:
            entity_id: script.gr_lawn_sprinkler_emergency_off
      else:  
        - service: switch.turn_off
          data: {}
          target:
            entity_id: switch.brunnen
        # wait if switch is really turned on                  
        - delay: "00:00:{{ states('input_number.in_ha_switch_delay_response') | int }}"
        - if:
          - condition: template
            value_template: "{{ states('switch.brunnen') == 'unavailable' or  states('switch.brunnen') == 'on' }}"
          then:
            - service: script.turn_on
              target:
                entity_id: script.ha_handy_notification
              data:
                variables:
                  msg_title: "{{states('input_text.it_general_notification_title')}} Garten"
                  msg_message: "Die Rasenbewässerung kann nicht abgeschaltet werden. Der Schalter {{ state_attr('switch.brunnen', 'friendly_name') }} ist nicht verfügbar."
            - service: script.turn_on
              target:
                entity_id: script.ha_alexa_notification_queued
              data:
                variables:
                  msg_title: "{{states('input_text.it_general_notification_title')}} Garten"
                  msg_message: "Die Rasenbewässerung kann nicht abgeschaltet werden. Der Schalter {{ state_attr('switch.brunnen', 'friendly_name') }} ist nicht verfügbar."
                  device: "{{ alexa_device }}"
                  type: "{{ alexa_type }}"                      
            # - service: notify.alexa_media_uberall
            #   data:
            #     title: "{{states('input_text.it_general_notification_title')}} Garten"
            #     message: "Die Rasenbewässerung kann nicht abgeschaltet werden. Der Schalter {{ state_attr('switch.brunnen', 'friendly_name') }} ist nicht verfügbar."
            #     data:
            #       type: announce
                  method: all
            - service: script.turn_on
              data: {}
              target:
                entity_id: script.gr_lawn_sprinkler_emergency_off                     
          else:
            - service: script.turn_on
              target:
                entity_id: script.ha_handy_notification
              data:
                variables:
                  msg_title: "{{states('input_text.it_general_notification_title')}} Garten"
                  msg_message: "Die Rasenbewässerung läuft länger als {{state_attr('input_number.in_gr_duration_lawn_sprinkler',
                    'max') | int}} Minuten und wird abgeschaltet"
            - service: script.turn_on
              target:
                entity_id: script.ha_alexa_notification_queued
              data:
                variables:
                  msg_title: "{{states('input_text.it_general_notification_title')}} Garten"
                  msg_message: "Die Rasenbewässerung läuft länger als {{state_attr('input_number.in_gr_duration_lawn_sprinkler',
                    'max') | int}} Minuten und wird abgeschaltet"
                  device: "{{ alexa_device }}"
                  type: "{{ alexa_type }}"                        
            # - service: notify.alexa_media_uberall
            #   data:
            #     title: "{{states('input_text.it_general_notification_title')}} Garten"
            #     message: "Die Rasenbewässerung läuft länger als {{state_attr('input_number.in_gr_duration_lawn_sprinkler',
            #       'max') | int}} Minuten und wird abgeschaltet"
            #     data:
            #       type: announce
            #       method: all   
  mode: single