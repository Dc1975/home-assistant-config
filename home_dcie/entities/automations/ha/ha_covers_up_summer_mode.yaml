- id: '1683729192248'
  alias: HA Rolladen auf Sommerbetrieb
  description: ""
  trigger:
    - platform: time
      at: input_datetime.idt_ha_covers_close_summer_before
  condition:
    - condition: template
      value_template: >
        {{now().month | string in
        states('input_text.it_ha_covers_close_summer_months')}}
  action:
# counter of executed scripts in this automation  
    - service: input_number.set_value
      data:
        value: 0
      target:
        entity_id: input_number.in_ha_executed_automations_of_summer_mode   
# flag this automation as running        
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.ib_ha_covers_up_down_summer_mode_runs
# Wohnzimemrtür
    - if:
        - condition: template
          value_template: >
            {{ states('input_boolean.ib_wz_door_covers_closed_by_summer_mode') == 'on'
              and states('input_boolean.ib_wz_door_cover_used_in_automations') == 'on' }}
      then:    
        - service: script.turn_on
          target:
            entity_id: script.wz_covers_up_door
          data: {}
# wait for script execution to check...              
        - if:
            - condition: template
              value_template: "{{states('input_boolean.ib_wait_for_script') == 'on'}}"
          then:    
            - wait_template: "{{is_state('script.wz_covers_up_door', 'off') }}"                
              continue_on_timeout: true              
# ...if script was executed by conditions
        - if:              
            - condition: state
              entity_id: input_boolean.ib_wz_door_cover_up_down_script_executed
              state: "on"    
          then:          
# changed by this automation, not manually          
            - service: input_boolean.turn_off
              data: {}
              target:
                entity_id: input_boolean.ib_wz_door_covers_closed_by_summer_mode                                       
            - service: input_number.increment
              data: {}
              target:
                entity_id: input_number.in_ha_executed_automations_of_summer_mode            
# Wohnzimemrfenster
    - if:
        - condition: template
          value_template: >
            {{ states('input_boolean.ib_wz_window_covers_closed_by_summer_mode') == 'on'
              and states('input_boolean.ib_wz_window_cover_used_in_automations') == 'on' }}
      then:    
        - service: script.turn_on
          target:
            entity_id: script.wz_covers_up_window
          data: {}
# wait for script execution to check...              
        - if:
            - condition: template
              value_template: "{{states('input_boolean.ib_wait_for_script') == 'on'}}"
          then:    
            - wait_template: "{{is_state('script.wz_covers_up_window', 'off') }}"                
              continue_on_timeout: true              
# ...if script was executed by conditions
        - if:              
            - condition: state
              entity_id: input_boolean.ib_wz_window_cover_up_down_script_executed
              state: "on"    
          then:          
# changed by this automation, not manually          
            - service: input_boolean.turn_off
              data: {}
              target:
                entity_id: input_boolean.ib_wz_window_covers_closed_by_summer_mode                      
            - service: input_number.increment
              data: {}
              target:
                entity_id: input_number.in_ha_executed_automations_of_summer_mode            
# Dachgeschoss
    - if:
        - condition: template
          value_template: >
            {{ states('input_boolean.ib_dg_covers_closed_by_summer_mode') == 'on'
              and states('input_boolean.ib_dg_cover_used_in_automations') == 'on' }}
      then:    
        - service: script.turn_on
          target:
            entity_id: script.dg_covers_up
          data: {}
# wait for script execution to check...              
        - if:
            - condition: template
              value_template: "{{states('input_boolean.ib_wait_for_script') == 'on'}}"
          then:    
            - wait_template: "{{is_state('script.dg_covers_up', 'off') }}"                
              continue_on_timeout: true              
# ...if script was executed by conditions
        - if:              
            - condition: state
              entity_id: input_boolean.ib_dg_cover_up_down_script_executed
              state: "on"    
          then:          
# changed by this automation, not manually          
            - service: input_boolean.turn_off
              data: {}
              target:
                entity_id: input_boolean.ib_dg_covers_closed_by_summer_mode          
            - service: input_number.increment
              data: {}
              target:
                entity_id: input_number.in_ha_executed_automations_of_summer_mode            
# Ankleidezimmer            
    - if:
        - condition: template
          value_template: >
            {{ states('input_boolean.ib_sz_az_covers_closed_by_summer_mode') == 'on'
              and states('input_boolean.ib_sz_az_cover_used_in_automations') == 'on' }}
      then:    
        - service: script.turn_on
          target:
            entity_id: script.sz_az_covers_up
          data: {}
# wait for script execution to check...              
        - if:
            - condition: template
              value_template: "{{states('input_boolean.ib_wait_for_script') == 'on'}}"
          then:    
            - wait_template: "{{is_state('script.sz_az_covers_up', 'off') }}"                
              continue_on_timeout: true              
# ...if script was executed by conditions
        - if:              
            - condition: state
              entity_id: input_boolean.ib_sz_az_cover_up_down_script_executed
              state: "on"    
          then:             
# changed by this automation, not manually          
            - service: input_boolean.turn_off
              data: {}
              target:
                entity_id: input_boolean.ib_sz_az_covers_closed_by_summer_mode  
            - service: input_number.increment
              data: {}
              target:
                entity_id: input_number.in_ha_executed_automations_of_summer_mode            
# Schlafzimmer          
    - if:
        - condition: template
          value_template: >
            {{ states('input_boolean.ib_sz_covers_closed_by_summer_mode') == 'on'
              and states('input_boolean.ib_sz_cover_used_in_automations') == 'on' }}
      then:    
        - service: script.turn_on
          target:
            entity_id: script.sz_covers_up
          data: {}
# wait for script execution to check...              
        - if:
            - condition: template
              value_template: "{{states('input_boolean.ib_wait_for_script') == 'on'}}"
          then:    
            - wait_template: "{{is_state('script.sz_covers_up', 'off') }}"                
              continue_on_timeout: true              
# ...if script was executed by conditions
        - if:              
            - condition: state
              entity_id: input_boolean.ib_sz_cover_up_down_script_executed
              state: "on"    
          then:          
# changed by this automation, not manually          
            - service: input_boolean.turn_off
              data: {}
              target:
                entity_id: input_boolean.ib_sz_covers_closed_by_summer_mode  
            - service: input_number.increment
              data: {}
              target:
                entity_id: input_number.in_ha_executed_automations_of_summer_mode            
# Gästezimmer            
    - if:
        - condition: template
          value_template: >
            {{ states('input_boolean.ib_gz_covers_closed_by_summer_mode') == 'on'
              and states('input_boolean.ib_gz_cover_used_in_automations') == 'on' }}
      then:    
        - service: script.turn_on
          target:
            entity_id: script.gz_covers_up
          data: {}
# wait for script execution to check...              
        - if:
            - condition: template
              value_template: "{{states('input_boolean.ib_wait_for_script') == 'on'}}"
          then:    
            - wait_template: "{{is_state('script.gz_covers_up', 'off') }}"                
              continue_on_timeout: true              
# ...if script was executed by conditions
        - if:              
            - condition: state
              entity_id: input_boolean.ib_gz_cover_up_down_script_executed
              state: "on"    
          then:          
# changed by this automation, not manually
            - service: input_boolean.turn_off
              data: {}
              target:
                entity_id: input_boolean.ib_gz_covers_closed_by_summer_mode              
            - service: input_number.increment
              data: {}
              target:
                entity_id: input_number.in_ha_executed_automations_of_summer_mode            
# Küche       
    - if:
        - condition: template
          value_template: >
            {{ states('input_boolean.ib_ku_covers_closed_by_summer_mode') == 'on'
              and states('input_boolean.ib_ku_cover_used_in_automations') == 'on' }}
      then:    
        - service: script.turn_on
          target:
            entity_id: script.ku_covers_up
          data: {}
# wait for script execution to check...              
        - if:
            - condition: template
              value_template: "{{states('input_boolean.ib_wait_for_script') == 'on'}}"
          then:    
            - wait_template: "{{is_state('script.ku_covers_up', 'off') }}"                
              continue_on_timeout: true              
# ...if script was executed by conditions
        - if:              
            - condition: state
              entity_id: input_boolean.ib_ku_cover_up_down_script_executed
              state: "on"    
          then:          
# changed by this automation, not manually          
            - service: input_boolean.turn_off
              data: {}
              target:
                entity_id: input_boolean.ib_ku_covers_closed_by_summer_mode                          
            - service: input_number.increment
              data: {}
              target:
                entity_id: input_number.in_ha_executed_automations_of_summer_mode            
# Badezimmer         
    - if:
        - condition: template
          value_template: >
            {{ states('input_boolean.ib_bz_covers_closed_by_summer_mode') == 'on'
              and states('input_boolean.ib_bz_cover_used_in_automations') == 'on' }}
      then:    
        - service: script.turn_on
          target:
            entity_id: script.bz_covers_up
          data: {}
# wait for script execution to check...              
        - if:
            - condition: template
              value_template: "{{states('input_boolean.ib_wait_for_script') == 'on'}}"
          then:    
            - wait_template: "{{is_state('script.bz_covers_up', 'off') }}"                
              continue_on_timeout: true              
# ...if script was executed by conditions
        - if:              
            - condition: state
              entity_id: input_boolean.ib_bz_cover_up_down_script_executed
              state: "on"    
          then:          
# changed by this automation, not manually
            - service: input_boolean.turn_off
              data: {}
              target:
                entity_id: input_boolean.ib_bz_covers_closed_by_summer_mode
            - service: input_number.increment
              data: {}
              target:
                entity_id: input_number.in_ha_executed_automations_of_summer_mode 
# delay max span time of covers to avoid overwriting input_boolean."ib_XXX_cover_position_changed" of
# XXX_cover_position_changed automations
# lock until the cover no longer moves 
    - if:
        - condition: template
          value_template: >
            {{ states('input_number.in_ha_executed_automations_of_summer_mode') |
            int > 0 }}
      then:         
        - delay: "00:00:{{ states('input_number.in_ha_covers_span_time_delay') | int }}"
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.ib_ha_covers_up_down_summer_mode_runs          
  mode: single
