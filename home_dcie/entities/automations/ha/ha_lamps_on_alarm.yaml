- id: "1697539117943"
  alias: HA eingeschaltete Lampen
  variables:
    alexa_device: media_player.echo_wohnzimmer,media_player.echo_dachgeschoss
    alexa_type: announce
  description: ""
  trigger:
    - platform: state
      entity_id:
        - sensor.sr_ha_lamps_on_count
  condition:
  action:
    - if:
        - condition: template
          value_template: >-
            {% set count = states('sensor.sr_ha_lamps_on_count') | int(0) %}
            {{           
              ( count > 0 and count >= (states('input_number.in_ha_lamps_on_alarm_last_count') | int(0)))
            }}
      then:
        - service: script.turn_on
          target:
            entity_id: script.ha_handy_notification
          data:
            variables:
              msg_title: "{{states('input_text.it_ha_devices_on_alert_notification_title')}}"
              msg_message: >
                {% set prefix = states('input_text.it_ha_devices_on_alert_notification_message') %}
                {% set entitys_text_off = "Es sind keine Lampen eingeschaltet." %}
                {% set entity_text_on = "Die Lampe" %}
                {% set entitys_text_on = "Die Lampen" %}
                {% set alarmText = "seit " + states('input_number.in_ha_lamps_on_alarm_period') | int(0) | string + " Minuten " %}

                {% set filter = states('input_text.it_ha_lamps_on_filter') %}
                {% set minutes = timedelta(minutes=states('input_number.in_ha_lamps_on_alarm_period') | int) %}
                {% set entity_name = "light.ha_grp_lampen" %}
                {% set type = "light." %}

                {% set result = namespace(entity_ids=[]) %}
                {% set entity_list = filter.split(',') %} {% for entity_id in entity_list %}
                    {% set result.entity_ids = result.entity_ids  + [type + entity_id] %}
                {% endfor %}
                {% set filter = result.entity_ids %}

                {% set switches =  expand(states.switch) | selectattr('state', 'eq', 'on') |
                    selectattr('entity_id', 'in', expand(entity_name))|
                    expand(entity_name) | selectattr('state', 'eq', 'on') |
                    selectattr('last_changed', '<', (now() - minutes)) | list%}
                {% set switches =  switches | rejectattr('entity_id', 'in', filter) | map(attribute='name') | list %}

                {% set output = namespace(out= "") %}
                {% if (switches | length) == 0 %}
                    {% set output.out = output.out + entitys_text_off %}
                {% elif (switches | length) == 1 %}
                    {% set output.out = output.out + entity_text_on + " " + switches[0] + " ist " + alarmText + "eingeschaltet." %}
                {%- else  -%}
                    {% set output.out = output.out + entitys_text_on + " " %}
                    {%- for i in range(switches|length) -%}
                        {%- if i == (switches|length)-1 -%}
                            {% set output.out = output.out + " und " + switches[i] + " sind " + alarmText + "eingeschaltet." %}
                        {%- else -%}
                            {% set output.out = output.out + switches[i] %}
                            {%- if (i + 2) in range(switches|length) -%}
                                {% set output.out = output.out + ", " %}
                            {%- endif %}
                        {%- endif -%}
                    {% endfor %}
                {% endif %} 
                {{prefix + output.out}}

        - service: script.turn_on
          target:
            entity_id: script.ha_alexa_notification_queued
          data:
            variables:
              device: "{{ alexa_device }}"
              type: "{{ alexa_type }}"
              msg_title: "{{states('input_text.it_ha_devices_on_alert_notification_title')}}"
              msg_message: >
                "{{states('input_text.it_ha_devices_on_alert_notification_message')}}"
                {% set entitys_text_off = "Es sind keine Lampen eingeschaltet." %}
                {% set entity_text_on = "Die Lampe" %}
                {% set entitys_text_on = "Die Lampen" %}
                {% set alarmText = "seit " + states('input_number.in_ha_lamps_on_alarm_period') | int(0) | string + " Minuten " %}

                {% set filter = states('input_text.it_ha_lamps_on_filter') %}
                {% set minutes = timedelta(minutes=states('input_number.in_ha_lamps_on_alarm_period') | int) %}
                {% set entity_name = "light.ha_grp_lampen" %}
                {% set type = "light." %}

                {% set result = namespace(entity_ids=[]) %}
                {% set entity_list = filter.split(',') %} {% for entity_id in entity_list %}
                    {% set result.entity_ids = result.entity_ids  + [type + entity_id] %}
                {% endfor %}
                {% set filter = result.entity_ids %}

                {% set switches =  expand(states.switch) | selectattr('state', 'eq', 'on') |
                    selectattr('entity_id', 'in', expand(entity_name))|
                    expand(entity_name) | selectattr('state', 'eq', 'on') |
                    selectattr('last_changed', '<', (now() - minutes)) | list%}
                {% set switches =  switches | rejectattr('entity_id', 'in', filter) | map(attribute='name') | list %}

                {% set output = namespace(out= "") %}
                {% if (switches | length) == 0 %}
                    {% set output.out = output.out + entitys_text_off %}
                {% elif (switches | length) == 1 %}
                    {% set output.out = output.out + entity_text_on + " " + switches[0] + " ist " + alarmText + "eingeschaltet." %}
                {%- else  -%}
                    {% set output.out = output.out + entitys_text_on + " " %}
                    {%- for i in range(switches|length) -%}
                        {%- if i == (switches|length)-1 -%}
                            {% set output.out = output.out + " und " + switches[i] + " sind " + alarmText + "eingeschaltet." %}
                        {%- else -%}
                            {% set output.out = output.out + switches[i] %}
                            {%- if (i + 2) in range(switches|length) -%}
                                {% set output.out = output.out + ", " %}
                            {%- endif %}
                        {%- endif -%}
                    {% endfor %}
                {% endif %} 
                {{output.out}}
        # - service: notify.alexa_media_uberall
        #   data:
        #     title: "{{states('input_text.it_ha_devices_on_alert_notification_title')}}"
        #     message: >
        #       "{{states('input_text.it_ha_devices_on_alert_notification_message')}}"
        #       {% set entitys_text_off = "Es sind keine Lampen eingeschaltet." %}
        #       {% set entity_text_on = "Die Lampe" %}
        #       {% set entitys_text_on = "Die Lampen" %}
        #       {% set alarmText = "seit " + states('input_number.in_ha_lamps_on_alarm_period') | int(0) | string + " Minuten " %}

        #       {% set filter = states('input_text.it_ha_lamps_on_filter') %}
        #       {% set minutes = timedelta(minutes=states('input_number.in_ha_lamps_on_alarm_period') | int) %}
        #       {% set entity_name = "light.ha_grp_lampen" %}
        #       {% set type = "light." %}

        #       {% set result = namespace(entity_ids=[]) %}
        #       {% set entity_list = filter.split(',') %} {% for entity_id in entity_list %}
        #           {% set result.entity_ids = result.entity_ids  + [type + entity_id] %}
        #       {% endfor %}
        #       {% set filter = result.entity_ids %}

        #       {% set switches =  expand(states.switch) | selectattr('state', 'eq', 'on') |
        #           selectattr('entity_id', 'in', expand(entity_name))|
        #           expand(entity_name) | selectattr('state', 'eq', 'on') |
        #           selectattr('last_changed', '<', (now() - minutes)) | list%}
        #       {% set switches =  switches | rejectattr('entity_id', 'in', filter) | map(attribute='name') | list %}

        #       {% set output = namespace(out= "") %}
        #       {% if (switches | length) == 0 %}
        #           {% set output.out = output.out + entitys_text_off %}
        #       {% elif (switches | length) == 1 %}
        #           {% set output.out = output.out + entity_text_on + " " + switches[0] + " ist " + alarmText + "eingeschaltet." %}
        #       {%- else  -%}
        #           {% set output.out = output.out + entitys_text_on + " " %}
        #           {%- for i in range(switches|length) -%}
        #               {%- if i == (switches|length)-1 -%}
        #                   {% set output.out = output.out + " und " + switches[i] + " sind " + alarmText + "eingeschaltet." %}
        #               {%- else -%}
        #                   {% set output.out = output.out + switches[i] %}
        #                   {%- if (i + 2) in range(switches|length) -%}
        #                       {% set output.out = output.out + ", " %}
        #                   {%- endif %}
        #               {%- endif -%}
        #           {% endfor %}
        #       {% endif %}
        #       {{output.out}}
        #     data:
        #       type: announce
        #       method: all
    # use the helper to avoid execution if the lights will be switched off
    - service: input_number.set_value
      data:
        value: "{{states('sensor.sr_ha_lamps_on_count') | int(0)}}"
      target:
        entity_id: input_number.in_ha_lamps_on_alarm_last_count
  mode: single
