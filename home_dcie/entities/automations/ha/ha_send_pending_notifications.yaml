- id: send_pending_notifications
  alias: Send pending notifications
  description: Send pending notifications when arriving home with 1 minute delay
  variables:
    alexa_device: media_player.echo_wohnzimmer
    alexa_type: announce
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.bs_ha_dcie_at_home
      to: "on"
      for:
        minutes: "{{ states('input_number.in_ha_delay_queued_notification') | int }}"
  condition:
    - condition: template
      value_template:
        '{{ state_attr("automation.send_pending_notifications", "last_triggered")
        == None or ( as_timestamp(now()) - as_timestamp(state_attr("automation.send_pending_notifications",
        "last_triggered")) |int(0) ) > 60 }}'
    - condition: numeric_state
      entity_id: sensor.sr_ha_pending_notification
      above: 0
  action:
  # excute script which handles the pending notifications
  - service: script.turn_on
    data: 
      variables:
        device: "{{ alexa_device }}"
        type: "{{ alexa_type }}"
    target:
      entity_id: script.ha_should_pending_notifications_played    

#    - alias: Set variables
#      variables:
#        notifications:
#          '{{ state_attr("sensor.sr_ha_pending_notification", "list")
#          | default([], true) }}'
#    - delay: 15
    # send header notification
#    - service: script.turn_on
#      target:
#        entity_id: script.ha_alexa_notification
#      data:
#        variables:
#          msg_title: "HomeAssistant - Ausstehende Benachrichtigungen"
#          msg_message: "Es werden {{states('sensor.sr_ha_pending_notifications_info')}} ausstehende Benachrichtigungen abgespielt"
#          device: "{{ alexa_device }}"
#          type: "{{ alexa_type }}"
#    - delay: 5
#    - repeat:
#        while:
#          - condition: template
#            value_template: "{{ repeat.index <= notifications|length}}"
#        sequence:
#          - alias: Set variables
#            variables:
#              index: "{{ repeat.index -1 }}"
#              notification: "{{ notifications[index] }}"
#          - service: script.turn_on
#            target:
              #entity_id: script.notify_those_at_home
#              entity_id: script.ha_alexa_notification_queued
#            data:
#              variables:
#                msg_title: "{{ notification.title }}"
#                msg_message: "{{ notification.message }}"
#                device: "{{ notification.device }}"
#                type: "{{ notification.type }}"
#                data: "{{ notification.data }}"
                #notify_when_away: false
#    - event: set_entity_value
#      event_data:
#        entity_id: sensor.sr_ha_pending_notification
#        state: "0"
#        attr:
#          list: ""
  mode: single
