input_boolean:
  start_stopwatch_lawn_sprinkler:
    # It triggers stopwatch to start/stop(pause)
    name: Start/Stop Stopwatch_lawn_sprinkler
#    initial: off
  reset_stopwatch_lawn_sprinkler:
    # It triggers stopwatch to reset
    name: Reset_lawn_sprinkler
#    initial: off
  tictac_stopwatch_lawn_sprinkler:
    # Pendulum of the stopwatch
    name: TicTac_lawn_sprinkler
#    initial: off
  lap_stopwatch_lawn_sprinkler:
    # It triggers stopwatch to show lap time
    name: Lap_lawn_sprinkler
    icon: mdi:camera-outline
#    initial: off

template:
  - trigger:
    # Stopwatch sensor with Start, Stop/Pause, Reset and Lap features. Hundreds of second precission
    - platform: state
      entity_id: input_boolean.start_stopwatch_lawn_sprinkler
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.start_stopwatch_lawn_sprinkler
      from: "on"
      to: "off"
    - platform: state
      entity_id: input_boolean.reset_stopwatch_lawn_sprinkler
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lap_stopwatch_lawn_sprinkler
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.tictac_stopwatch_lawn_sprinkler
    sensor:
      - name: "Stopwatch lawn sprinkler"
        state: >-
          {% if is_state('input_boolean.reset_stopwatch_lawn_sprinkler','on') %}
              {{ '00:00:00' }}
          {% elif  is_state('input_boolean.start_stopwatch_lawn_sprinkler','off') and is_state('input_boolean.lap_stopwatch_lawn_sprinkler','off') %}
              {% set value = as_timestamp(now()) - state_attr('sensor.stopwatch_lawn_sprinkler','initial_time') + state_attr('sensor.stopwatch_lawn_sprinkler','elapsed_time') %}
              {{ value|float|timestamp_custom("%H:%M:%S", False) + '.' + ((value|float*100)%100)|round(0)|string }}
          {% elif  is_state_attr('sensor.stopwatch_lawn_sprinkler','running','on') %}
              {% set value = as_timestamp(now()) - state_attr('sensor.stopwatch_lawn_sprinkler','initial_time') + state_attr('sensor.stopwatch_lawn_sprinkler','elapsed_time') %}
              {{ value|float|timestamp_custom("%H:%M:%S", False) |string }}
          {% else %}
              {{ states('sensor.stopwatch_lawn_sprinkler') }}
          {% endif %}
        icon: mdi:timer
        attributes:
          initial_time: >-
            {% if is_state('input_boolean.start_stopwatch_lawn_sprinkler', 'on') and is_state_attr('sensor.stopwatch_lawn_sprinkler','running','off') %}
              {{ as_timestamp(now()) }}
            {% else %}
              {{ state_attr('sensor.stopwatch_lawn_sprinkler','initial_time') }}
            {% endif %}
          elapsed_time: >-
            {% if is_state('input_boolean.reset_stopwatch_lawn_sprinkler','on') %}
              {{ 0 }}
            {% elif is_state('input_boolean.start_stopwatch_lawn_sprinkler','off') and is_state('input_boolean.lap_stopwatch_lawn_sprinkler','off') %}
              {{ as_timestamp(now()) - state_attr('sensor.stopwatch_lawn_sprinkler','initial_time') + state_attr('sensor.stopwatch_lawn_sprinkler','elapsed_time') }}
            {% else %}
              {{ state_attr('sensor.stopwatch_lawn_sprinkler','elapsed_time') }}
            {% endif %}
          running: >-
            {{ states('input_boolean.start_stopwatch_lawn_sprinkler') }}
          laps: >-
            {% if is_state('input_boolean.reset_stopwatch_lawn_sprinkler','on') %}
              {{[]}}
            {% elif is_state('input_boolean.lap_stopwatch_lawn_sprinkler','on') and is_state_attr('sensor.stopwatch_lawn_sprinkler','running','on') %}
              {% set data = namespace(laps=state_attr('sensor.stopwatch_lawn_sprinkler','laps')) %}
              {% set value = as_timestamp(now()) - state_attr('sensor.stopwatch_lawn_sprinkler','initial_time') + state_attr('sensor.stopwatch_lawn_sprinkler','elapsed_time') %}
              {% set data.laps = (data.laps + [value|float|timestamp_custom("%H:%M:%S", False) + '.' + ((value|float*100)%100)|round(0)|string]) %}
              {{ data.laps }}
            {% else %}
              {{ state_attr('sensor.stopwatch_lawn_sprinkler','laps')}}
            {% endif %}  
#  - trigger:
    # Numeric conversion of input_boolean.tictac_stopwatch_lawn_sprinkler to show as a gauge in Frontend
#    - platform: state
#      entity_id: input_boolean.tictac_stopwatch_lawn_sprinkler
#    sensor:
#      - unique_id: tictac_stopwatch_lawn_sprinkler
#        name: >-
#          {% if states('input_boolean.tictac_stopwatch_lawn_sprinkler') == 'on' %}
#            Tic
#          {% else %}
#            Tac
#          {% endif %}
#        state: >-
#          {% if is_state('input_boolean.tictac_stopwatch_lawn_sprinkler','on') %}
#            {{ 1 }}
#          {% else %}
#            {{ 0 }}
#          {% endif %}
#        icon: >-
#          {% if states('input_boolean.tictac_stopwatch_lawn_sprinkler') == 'off' %}
#            mdi:clock-time-nine
#          {% else %}
#            mdi:clock-time-three-outline
#          {% endif %}
  # Start/Stop(Pause) button
  - button:
    - unique_id: 'start_stop_stopwatch_lawn_sprinkler'
      name: >-
        {% if is_state('input_boolean.start_stopwatch_lawn_sprinkler','off') %}
          {% if is_state('sensor.stopwatch_lawn_sprinkler','00:00:00') %}
            Start_lawn_sprinkler
          {% else %}
            Resume_lawn_sprinkler
          {% endif %}
        {% else %}
          Stop/Pause_lawn_sprinkler
        {% endif %}
      icon: >-
        {% if states('input_boolean.start_stopwatch_lawn_sprinkler') == 'off' %}
          mdi:play-circle-outline
        {% else %}
          mdi:stop-circle-outline
        {% endif %}
      press:
        service: input_boolean.toggle
        target:
          entity_id: input_boolean.start_stopwatch_lawn_sprinkler

automation:
  - id: tic_tac_stopwatch_lawn_sprinkler
    alias: "Tic Tac Stopwatch lawn sprinkler"
    description: "It toggles input_boolean.tictac_stopwatch_lawn_sprinkler every second"
    trigger:
      - platform: time_pattern
        seconds: /1
    condition:
      - condition: state
        entity_id: input_boolean.start_stopwatch_lawn_sprinkler
        state: 'on'
    action:
      - service: input_boolean.toggle
        target:
          entity_id: input_boolean.tictac_stopwatch_lawn_sprinkler
    mode: single

  - id: reset_stopwatch_lawn_sprinkler
    alias: "Reset Stopwatch lawn sprinkler"
    description: "It reset input_booleans when input_boolean.reset_stopwatch_lawn_sprinkler is set to on"
    trigger:
      - platform: state
        entity_id: input_boolean.reset_stopwatch_lawn_sprinkler
        from: "off"
        to: "on"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.start_stopwatch_lawn_sprinkler
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.tictac_stopwatch_lawn_sprinkler
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.reset_stopwatch_lawn_sprinkler
    mode: single

  - id: lap_stopwatch_lawn_sprinkler
    alias: "Lap Stopwatch lawn sprinkler"
    description: "It turns off input_boolean.lap_stopwatch_lawn_sprinkler when it is turned on"
    trigger:
      - platform: state
        entity_id: input_boolean.lap_stopwatch_lawn_sprinkler
        from: "off"
        to: "on"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.lap_stopwatch_lawn_sprinkler
    mode: single