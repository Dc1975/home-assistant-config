input_boolean:
  start_stopwatch_dryer:
    # It triggers stopwatch to start/stop(pause)
    name: Start/Stop Stopwatch_dryer
  #    initial: off
  reset_stopwatch_dryer:
    # It triggers stopwatch to reset
    name: Reset_dryer
  #    initial: off
  tictac_stopwatch_dryer:
    # Pendulum of the stopwatch
    name: TicTac_dryer
  #    initial: off
  lap_stopwatch_dryer:
    # It triggers stopwatch to show lap time
    name: Lap_dryer
    icon: mdi:camera-outline
#    initial: off

template:
  - trigger:
      # Stopwatch sensor with Start, Stop/Pause, Reset and Lap features. Hundreds of second precission
      - platform: state
        entity_id: input_boolean.start_stopwatch_dryer
        from: "off"
        to: "on"
      - platform: state
        entity_id: input_boolean.start_stopwatch_dryer
        from: "on"
        to: "off"
      - platform: state
        entity_id: input_boolean.reset_stopwatch_dryer
        from: "off"
        to: "on"
      - platform: state
        entity_id: input_boolean.lap_stopwatch_dryer
        from: "off"
        to: "on"
      - platform: state
        entity_id: input_boolean.tictac_stopwatch_dryer
    sensor:
      - name: "Stopwatch dryer"
        unique_id: stopwatch_dryer
        state: >-
          {% if is_state('input_boolean.reset_stopwatch_dryer','on') %}
              {{ '00:00:00' }}
          {% elif  is_state('input_boolean.start_stopwatch_dryer','off') and is_state('input_boolean.lap_stopwatch_dryer','off') %}
              {% set value = as_timestamp(now()) - state_attr('sensor.stopwatch_dryer','initial_time') + state_attr('sensor.stopwatch_dryer','elapsed_time') %}
              {{ value|float|timestamp_custom("%H:%M:%S", False) }}
          {% elif  is_state_attr('sensor.stopwatch_dryer','running','on') %}
              {% set value = as_timestamp(now()) - state_attr('sensor.stopwatch_dryer','initial_time') + state_attr('sensor.stopwatch_dryer','elapsed_time') %}
              {{ value|float|timestamp_custom("%H:%M:%S", False) |string }}
          {% else %}
            {{ states('sensor.stopwatch_dryer').split(".")[0] }}
          {% endif %}
        icon: mdi:timer
        attributes:
          initial_time: >-
            {% if is_state('input_boolean.start_stopwatch_dryer', 'on') and is_state_attr('sensor.stopwatch_dryer','running','off') %}
              {{ as_timestamp(now()) }}
            {% else %}
              {{ state_attr('sensor.stopwatch_dryer','initial_time') }}
            {% endif %}
          elapsed_time: >-
            {% if is_state('input_boolean.reset_stopwatch_dryer','on') %}
              {{ 0 }}
            {% elif is_state('input_boolean.start_stopwatch_dryer','off') and is_state('input_boolean.lap_stopwatch_dryer','off') %}
              {{ as_timestamp(now()) - state_attr('sensor.stopwatch_dryer','initial_time') + state_attr('sensor.stopwatch_dryer','elapsed_time') }}
            {% else %}
              {{ state_attr('sensor.stopwatch_dryer','elapsed_time') }}
            {% endif %}
          running: >-
            {{ states('input_boolean.start_stopwatch_dryer') }}
          laps: >-
            {% if is_state('input_boolean.reset_stopwatch_dryer','on') %}
              {{[]}}
            {% elif is_state('input_boolean.lap_stopwatch_dryer','on') and is_state_attr('sensor.stopwatch_dryer','running','on') %}
              {% set data = namespace(laps=state_attr('sensor.stopwatch_dryer','laps')) %}
              {% set value = as_timestamp(now()) - state_attr('sensor.stopwatch_dryer','initial_time') + state_attr('sensor.stopwatch_dryer','elapsed_time') %}
              {% set data.laps = (data.laps + [value|float|timestamp_custom("%H:%M:%S", False)]) %}
              {{ data.laps }}
            {% else %}
              {{ state_attr('sensor.stopwatch_dryer','laps')}}
            {% endif %}
    # Numeric conversion of input_boolean.tictac_stopwatch_dryer to show as a gauge in Frontend
  #  - trigger:
  #    - platform: state
  #      entity_id: input_boolean.tictac_stopwatch_dryer
  #    sensor:
  #      - unique_id: tictac_stopwatch_dryer
  #        name: >-
  #          {% if states('input_boolean.tictac_stopwatch_dryer') == 'on' %}
  #            Tic
  #          {% else %}
  #            Tac
  #          {% endif %}
  #        state: >-
  #          {% if is_state('input_boolean.tictac_stopwatch_dryer','on') %}
  #            {{ 1 }}
  #          {% else %}
  #            {{ 0 }}
  #          {% endif %}
  #        icon: >-
  #          {% if states('input_boolean.tictac_stopwatch_dryer') == 'off' %}
  #            mdi:clock-time-nine
  #          {% else %}
  #            mdi:clock-time-three-outline
  #          {% endif %}
  # Start/Stop(Pause) button
  - button:
      - unique_id: "start_stop_stopwatch_dryer"
        name: >-
          {% if is_state('input_boolean.start_stopwatch_dryer','off') %}
            {% if is_state('sensor.stopwatch_dryer','00:00:00') %}
              Start_dryer
            {% else %}
              Resume_dryer
            {% endif %}
          {% else %}
            Stop/Pause_dryer
          {% endif %}
        icon: >-
          {% if states('input_boolean.start_stopwatch_dryer') == 'off' %}
            mdi:play-circle-outline
          {% else %}
            mdi:stop-circle-outline
          {% endif %}
        press:
          service: input_boolean.toggle
          target:
            entity_id: input_boolean.start_stopwatch_dryer

automation:
  - id: tic_tac_stopwatch_dryer
    alias: "Tic Tac Stopwatch dryer"
    description: "It toggles input_boolean.tictac_stopwatch_dryer every second"
    trigger:
      - platform: time_pattern
        seconds: /1
    condition:
      - condition: state
        entity_id: input_boolean.start_stopwatch_dryer
        state: "on"
    action:
      - service: input_boolean.toggle
        target:
          entity_id: input_boolean.tictac_stopwatch_dryer
    mode: single

  - id: reset_stopwatch_dryer
    alias: "Reset Stopwatch dryer"
    description: "It reset input_booleans when input_boolean.reset_stopwatch_dryer is set to on"
    trigger:
      - platform: state
        entity_id: input_boolean.reset_stopwatch_dryer
        from: "off"
        to: "on"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.start_stopwatch_dryer
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.tictac_stopwatch_dryer
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.reset_stopwatch_dryer
    mode: single

  - id: lap_stopwatch_dryer
    alias: "Lap Stopwatch dryer"
    description: "It turns off input_boolean.lap_stopwatch_dryer when it is turned on"
    trigger:
      - platform: state
        entity_id: input_boolean.lap_stopwatch_dryer
        from: "off"
        to: "on"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.lap_stopwatch_dryer
    mode: single
